---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import ItemGrid3 from '~/components/ui/ItemGrid3.astro';
import type { Features, ClickableItem } from '~/types';

interface Props extends Features {
  items: ClickableItem[];
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  items = [],
  columns = 3,
  defaultIcon,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;

const itemClasses = (classes?.items as Record<string, never>) ?? {};
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`relative ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />
  <ItemGrid3
    items={items}
    columns={columns}
    defaultIcon={defaultIcon}
    classes={{
      ...itemClasses,
      container: `relative gap-4 md:gap-6 !w-fit ${itemClasses?.container}`,
      panel:
        `group cursor-pointer text-white w-[220px] h-[220px] shadow-[0_4px_30px_rgba(0,0,0,0.1)] dark:shadow-[0_4px_30px_rgba(0,0,0,0.1)] backdrop-blur border border-[#ffffff29] bg-white dark:bg-slate-900 ${itemClasses?.panel}`,
      title: `w-full font-thin text-center text-[1.2rem] leading-none mt-6 px-6 py-2 bg-[#50A0BE] uppercase -translate-y-12 group-hover:translate-y-0 transition-all ${itemClasses?.title}`,
      description: `px-6 text-white translate-y-12 group-hover:translate-y-0 transition-all ${itemClasses?.description}`,
      content: `flex-1 opacity-0 group-hover:opacity-100 group-hover:backdrop-brightness-50 transition-all w-full ${itemClasses?.content}`,
      image: `absolute -z-10 inset-0 ${itemClasses?.image}`,
    }}
  />
</WidgetWrapper>
