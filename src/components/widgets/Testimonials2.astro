---
import { getImage } from "astro:assets";

import arrowLeft from '~/assets/images/testimonials/switch-left.png';
import arrowRight from '~/assets/images/testimonials/switch-right.png';

type SimpleTestimonial = {
  testimonial: string;
}
type Props = {
  testimonials: SimpleTestimonial[];
}

const {
  testimonials = [],
} = Astro.props;

const optimizedArrowLeft = await getImage({src: arrowLeft, format: 'png'});
const optimizedArrowRight = await getImage({src: arrowRight, format: 'png'});

---
<div class="relative hidden lg:flex top-[115px] left-[25px] w-[680px] h-[135px]"
  style={`--pragma-arrow-left: url(${optimizedArrowLeft.src}); --pragma-arrow-right: url(${optimizedArrowRight.src});`}
  data-carousel>
  <div class="px-[25px] overflow-hidden">
    {
      testimonials &&
        testimonials.map(({ testimonial }, index) => (
          <div class={`flex shrink-0 h-auto w-full ${index === 0 ? 'current' : '' }`} data-carousel-slide>
            {testimonial && (
              <blockquote class="flex-auto">
                <p class="text-muted">" {testimonial} "</p>
              </blockquote>
            )}
          </div>
        ))
    }
  </div>
  <div class="absolute top-[calc(50%-(37px/2)] w-full">
    <div data-arrow-left class="absolute cursor-pointer left-0 w-[20px] h-[37px] [background:var(--pragma-arrow-left)_no-repeat_0_0]"></div>
    <div data-arrow-right class="absolute cursor-pointer right-0 w-[20px] h-[37px] [background:var(--pragma-arrow-right)_no-repeat_0_0]"></div>
  </div>
</div>
<style>
  [data-carousel-slide]:not(.current) {
    @apply hidden;
  }
</style>
<script>
    let currentSlideIndex = 0;

    const handleClick = (event: MouseEvent) => {
      const target = event.target as HTMLElement;
      const slides = target.closest('[data-carousel]')?.querySelectorAll('[data-carousel-slide]')

      if(!slides) {
        return;
      }

      if (target.hasAttribute('data-arrow-left')) {
        currentSlideIndex = (currentSlideIndex - 1 + slides.length) % slides.length;
      } else if (target.hasAttribute('data-arrow-right')) {
        currentSlideIndex = (currentSlideIndex + 1) % slides.length;
      }

      slides.forEach((slide, index) => {
        slide.classList.toggle('current', index === currentSlideIndex);
      });
    };

    [...document.querySelectorAll('[data-carousel]')].forEach((carousel) => {
      (carousel as HTMLElement).addEventListener('click', handleClick);
    });
</script>
